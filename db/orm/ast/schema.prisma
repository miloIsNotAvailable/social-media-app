model User {
    id          String      @id @default(uuid())
    createdAt   DateTime    @default(now())
    email       String      @unique
    name        String?
    posts       Post[]
    communities UsersCommunitiesBridge[]
}
  
model Post {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    published Boolean  @default(false)
    title     String   
    author    User?    @relation(fields: [authorId], references: [id])
    authorId  String?
}

model Community {
    id          String      @id @default(uuid())
    createdAt   DateTime    @default(now())
    title       String      @unique
    description String
    communities UsersCommunitiesBridge[]
}

model UsersCommunitiesBridge {
    id           String      @id @default(uuid())
    users        User?       @relation(fields: [ user_id ], references: [ id ])
    community    Community?  @relation(fields: [ community_id ], references: [ id ])
    user_id      String
    community_id String
}
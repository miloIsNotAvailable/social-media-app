# Configure GraphQL Codegen to generate React hooks based on the queries in this file.

# Run the GraphQL Codegen command to generate the React hooks:

# Copy code
# graphql-codegen
# The generated React hooks will be outputted into separate files, which can be imported and used in your React application.

# query GetUser($id: ID!) {
#   user(id: $id) {
#     id
#     name
#     email
#   }
# }

# import { useQuery } from 'react-query';
# import { getUserQuery } from './generated/hooks';

# const UserComponent = ({ userId }) => {
#   const { data, isLoading, error } = useQuery('getUser', () => {
#     // Call the generated hook and pass the necessary variables
#     return useGetUserQuery({ variables: { id: userId } });
#   });

#   // Handle loading and error states, and access the query data as needed

#   return <div>{/* Render the component */}</div>;
# };


mutation UserAuth($email: String!, $password: String!, $username: String) {
  signin(email: $email, password: $password, username: $username) {
    ... on SignIn {
      email
      password
    }
    ... on SignUp {
      email
      password
      username
    }
  }
}
